"""Remove scan and finding tables

Revision ID: 5fbb484a07e5
Revises: ef3293f4d618
Create Date: 2025-09-09 21:51:56.157603

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5fbb484a07e5'
down_revision: Union[str, Sequence[str], None] = 'ef3293f4d618'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scans_id'), table_name='scans')
    op.drop_index(op.f('ix_scans_repository_name'), table_name='scans')
    op.drop_table('scans')
    op.drop_index(op.f('ix_findings_fingerprint'), table_name='findings')
    op.drop_index(op.f('ix_findings_id'), table_name='findings')
    op.drop_table('findings')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('findings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('scan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fingerprint', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('OPEN', 'ACCEPTED_RISK', 'FALSE_POSITIVE', name='findingstatus'), autoincrement=False, nullable=False),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['scan_id'], ['scans.id'], name=op.f('findings_scan_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('findings_pkey'))
    )
    op.create_index(op.f('ix_findings_id'), 'findings', ['id'], unique=False)
    op.create_index(op.f('ix_findings_fingerprint'), 'findings', ['fingerprint'], unique=True)
    op.create_table('scans',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('repository_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('results', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('scans_organization_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('scans_pkey'))
    )
    op.create_index(op.f('ix_scans_repository_name'), 'scans', ['repository_name'], unique=False)
    op.create_index(op.f('ix_scans_id'), 'scans', ['id'], unique=False)
    # ### end Alembic commands ###
